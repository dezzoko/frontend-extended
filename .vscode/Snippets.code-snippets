{
  // Place your frontend-extended workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "ComponentTemplate": {
    "prefix": "rc",
    "body": [
      "import { classNames } from \"shared/lib\";",
      "import cls from \"./${TM_FILENAME_BASE}.module.scss\";",
      "interface ${TM_FILENAME_BASE}Props {",
      "  className?: string;",
      "}",
      "export const ${TM_FILENAME_BASE} = ({ className }: ${TM_FILENAME_BASE}Props) => {",
      "  return (",
      "\t<div className={classNames(cls.${TM_FILENAME_BASE}, {}, [className])}>",
      "\t",
      "\t</div>",
      "  );",
      "};"
    ]
  },
  "ComponentWithForwardRef": {
    "prefix": "rcfr",
    "body": [
      "import { FC, ForwardedRef, forwardRef } from \"react\";",
      "import { classNames } from \"shared/lib\";",
      "import cls from \"./${TM_FILENAME_BASE}.module.scss\";",
      "interface ${TM_FILENAME_BASE}Props {",
      "  className?: string;",
      "  ref: ForwardedRef<HTMLDivElement>;",
      "}",
      "export const Test: FC<${TM_FILENAME_BASE}Props> = forwardRef<HTMLDivElement, ${TM_FILENAME_BASE}Props>(",
      "  ({ className }: ${TM_FILENAME_BASE}Props) => {",
      "\treturn <div className={classNames(cls.${TM_FILENAME_BASE/([A-Za-z]*)/${1:/downcase}/}, {}, [className])}>${TM_FILENAME_BASE}</div>;",
      "  }",
      ");",
      ""
    ]
  },
  "ComponentTemplateWithChildren": {
    "prefix": "rcch",
    "body": [
      "import { FC } from \"react\";",
      "import { classNames } from \"shared/lib\";",
      "import cls from \"./${TM_FILENAME_BASE}.module.scss\";",
      "interface ${TM_FILENAME_BASE}Props {",
      "  className?: string;",
      "}",
      "export const ${TM_FILENAME_BASE}: FC<${TM_FILENAME_BASE}Props> = ({ className, children }) => {",
      "  return (",
      "\t<div className={classNames(cls.${TM_FILENAME_BASE/([A-Za-z]*)/${1:/downcase}/}, {}, [className])}>",
      "\t",
      "\t</div>",
      "  );",
      "};"
    ]
  }
}
